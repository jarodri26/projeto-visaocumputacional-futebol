name: Futebol CI/CD

on:
  workflow_dispatch:
  pull_request:
    branches:
      - feature/*
      - develop
  push:
    branches:
      - main
      

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install deps
        run: |
          pip install -r requirements.txt || true
      - name: Run tests
        run: |
          pytest -q || true

  validate-bundles:
    runs-on: ubuntu-latest
    container: python:3.10
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          # use a direct requirements.txt path instead of a glob which can fail in some runner layouts
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install python deps and Databricks CLI
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: |
          pip install -r requirements.txt || true
          # install databricks bundle cli (cached in $HOME/.databricks-cli)
          mkdir -p $HOME/.databricks-cli
          if [ ! -f "$HOME/.databricks-cli/installed" ]; then
            curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh
            touch $HOME/.databricks-cli/installed
          fi

      - name: Validate Databricks bundles
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: |
          databricks bundle validate -t dev

      - name: List Databricks bundle resources (diagnostic)
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: |
          echo "--- databricks bundle list -t dev ---"
          databricks bundle list -t dev || true
          echo "--- end bundle list ---"

      - name: Validate configured local paths
        continue-on-error: true
        env:
          CREATE_PLACEHOLDERS: '1'
        run: |
          # ensure local workspace dirs exist
          mkdir -p "$GITHUB_WORKSPACE/data/videos"
          mkdir -p "$GITHUB_WORKSPACE/data/frames"
          mkdir -p "$GITHUB_WORKSPACE/data/models"
          python scripts/validate_paths.py

  deploy-bundles:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    container: python:3.10
    needs: validate-bundles
    steps:
      - uses: actions/checkout@v4
      - name: Restore pip cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}

      - name: Deploy Databricks bundles
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: |
          # fast-path: assume CLI already installed in validate step; still safe to run installer
          mkdir -p "$HOME/.databricks-cli"
          if [ ! -f "$HOME/.databricks-cli/installed" ]; then
            curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh
            touch $HOME/.databricks-cli/installed
          fi
          databricks bundle deploy -t dev

          echo "--- databricks bundle summary after deploy (json) ---"
          databricks bundle summary -t dev -o json || true
          echo "--- databricks bundle summary after deploy (text) ---"
          databricks bundle summary -t dev || true
          echo "--- end bundle summary ---"

  run-training-job:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    container: python:3.10
    needs: deploy-bundles
    steps:
      - uses: actions/checkout@v4
      - name: Run specific pipeline tasks (preprocess then train)
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: |
          mkdir -p "$HOME/.databricks-cli"
          if [ ! -f "$HOME/.databricks-cli/installed" ]; then
            curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh
            touch $HOME/.databricks-cli/installed
          fi
          echo "--- databricks bundle summary before run-training-job (json) ---"
          databricks bundle summary -t dev -o json || true
          echo "--- databricks bundle summary before run-training-job (text) ---"
          databricks bundle summary -t dev || true
          echo "--- end bundle summary ---"
          # Run preprocess task
          databricks bundle run jobs.futebol_pipeline.preprocess -t dev
          

  run-inference-job:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    container: python:3.10
    needs: run-training-job
    steps:
      - uses: actions/checkout@v4
      - name: Run eval (inference) task
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: |
          mkdir -p "$HOME/.databricks-cli"
          if [ ! -f "$HOME/.databricks-cli/installed" ]; then
            curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh
            touch $HOME/.databricks-cli/installed
          fi
          echo "--- databricks bundle summary before run-inference-job (json) ---"
          databricks bundle summary -t dev -o json || true
          echo "--- databricks bundle summary before run-inference-job (text) ---"
          databricks bundle summary -t dev || true
          echo "--- end bundle summary ---"
